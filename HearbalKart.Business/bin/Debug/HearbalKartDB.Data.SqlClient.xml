<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HearbalKartDB.Data.SqlClient</name>
    </assembly>
    <members>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlUserTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.UserType"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.UserType"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.UserType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.UserType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.UserType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.UserType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserType index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.UserType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.UserType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.UserType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.UserType)">
            <summary>
            	Inserts a HearbalKartDB.Entities.UserType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.UserType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.UserType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.UserType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.UserType object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.UserType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlUserTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlUserTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlUserTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdCompanyProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdCompany"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdCompany"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCompany objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCompany objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCompany objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCompany objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdCompany index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdCompany"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdCompany})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdCompany object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdCompany)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdCompany object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdCompany object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdCompany object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdCompany)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdCompany object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdCompany object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdCompanyProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCompanyProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdCompanyProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlItemSellProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ItemSell"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ItemSell"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemSell objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemSell objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemSell objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemSell objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.GetByItemId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ItemSell_Items key.
            	FK_ItemSell_Items Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_itemId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemSell objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ItemSell index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ItemSell"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ItemSell})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ItemSell object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ItemSell)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ItemSell object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ItemSell object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ItemSell object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ItemSell)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ItemSell object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ItemSell object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemSellProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemSellProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemSellProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdTableProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdTable"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdTable"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetByPurchaseId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ItemPurchase key.
            	FK_ProdTable_ItemPurchase Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_purchaseId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetByItemId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_Items key.
            	FK_ProdTable_Items Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_itemId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetBySellId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ItemSell key.
            	FK_ProdTable_ItemSell Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_sellId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetByCategoryId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ProdCategory key.
            	FK_ProdTable_ProdCategory Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_categoryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetByCompanyId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ProdCompany key.
            	FK_ProdTable_ProdCompany Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_companyId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetByMedicineForId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ProdMedicineFor key.
            	FK_ProdTable_ProdMedicineFor Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_medicineForId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetBySupplementId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ProdSupplymentType key.
            	FK_ProdTable_ProdSupplymentType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_supplementId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetByTypeId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProdTable_ProdType key.
            	FK_ProdTable_ProdType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_typeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdTable objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdTable index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdTable"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdTable})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdTable object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdTable)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdTable object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdTable object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdTable object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdTable)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdTable object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdTable object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdTableProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTableProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdTableProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlGenderProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Gender"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Gender"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Gender objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Gender objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Gender objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Gender objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Gender index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Gender"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Gender})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Gender object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Gender)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Gender object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Gender object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Gender object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Gender)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Gender object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Gender object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlGenderProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlGenderProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlGenderProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlItemsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Items"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Items"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Items objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Items objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Items objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Items objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Items index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Items"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Items})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Items object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Items)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Items object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Items object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Items object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Items)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Items object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Items object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.DeliveredDays"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.DeliveredDays"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DeliveredDays objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DeliveredDays objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DeliveredDays objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DeliveredDays objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DeliveredDays index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.DeliveredDays"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.DeliveredDays})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.DeliveredDays object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.DeliveredDays)">
            <summary>
            	Inserts a HearbalKartDB.Entities.DeliveredDays object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.DeliveredDays object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.DeliveredDays object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.DeliveredDays)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.DeliveredDays object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.DeliveredDays object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDeliveredDaysProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCitiesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Cities"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Cities"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Cities objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Cities objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Cities objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Cities objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.GetByStateId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Cities_States key.
            	FK_Cities_States Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_stateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Cities objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Cities index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Cities"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Cities})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Cities object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Cities)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Cities object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Cities object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Cities object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Cities)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Cities object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Cities object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCitiesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCitiesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCitiesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlDistributarsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Distributars"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Distributars"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetByCityId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Distributars_Cities key.
            	FK_Distributars_Cities Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_cityId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetByCountryId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Distributars_Countries key.
            	FK_Distributars_Countries Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetByDaliveredDaysId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Distributars_Distributars key.
            	FK_Distributars_Distributars Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_daliveredDaysId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetByStateId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Distributars_States key.
            	FK_Distributars_States Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_stateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Distributars objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Distributars index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Distributars"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Distributars})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Distributars object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Distributars)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Distributars object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Distributars object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Distributars object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Distributars)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Distributars object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Distributars object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDistributarsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributarsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDistributarsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCustomersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Customers"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Customers"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Customers objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Customers objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Customers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Customers objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.GetByGender(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Customers_Gender key.
            	FK_Customers_Gender Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_gender"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Customers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.GetByUserType(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Customers_UserType key.
            	FK_Customers_UserType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_userType"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Customers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Customers index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Customers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Customers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Customers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Customers)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Customers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Customers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Customers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Customers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Customers object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Customers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCustomersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCustomersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdType"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdType"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdType index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdType)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdType object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdCategoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdCategory"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdCategory"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCategory objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCategory objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCategory objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdCategory objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdCategory index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdCategory"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdCategory})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdCategory)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdCategory object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdCategory object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdCategory)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdCategory object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdCategory object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdCategoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdCategoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdCategoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdMedicineFor"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdMedicineFor"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdMedicineFor objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdMedicineFor objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdMedicineFor objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdMedicineFor objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdMedicineFor index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdMedicineFor"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdMedicineFor})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdMedicineFor object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdMedicineFor)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdMedicineFor object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdMedicineFor object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdMedicineFor object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdMedicineFor)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdMedicineFor object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdMedicineFor object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdMedicineForProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlStatesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.States"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.States"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.States objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.States objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.States objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.States objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.GetByCountryId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_States_Countries key.
            	FK_States_Countries Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.States objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_States index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.States"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.States})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.States object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.States)">
            <summary>
            	Inserts a HearbalKartDB.Entities.States object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.States object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.States object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.States)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.States object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.States object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlStatesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlStatesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlStatesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdSupplymentType"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdSupplymentType"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdSupplymentType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdSupplymentType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdSupplymentType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdSupplymentType objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdSupplymentType index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdSupplymentType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdSupplymentType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdSupplymentType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdSupplymentType)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdSupplymentType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdSupplymentType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdSupplymentType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdSupplymentType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdSupplymentType object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdSupplymentType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdSupplymentTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlOrderStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.OrderStatus"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.OrderStatus"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderStatus objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderStatus objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderStatus objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_OrderStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.OrderStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.OrderStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.OrderStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.OrderStatus)">
            <summary>
            	Inserts a HearbalKartDB.Entities.OrderStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.OrderStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.OrderStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.OrderStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.OrderStatus object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.OrderStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrderStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrderStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCountriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Countries"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Countries"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Countries objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Countries objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Countries objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Countries objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Countries index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Countries"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Countries})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Countries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Countries)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Countries object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Countries object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Countries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Countries)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Countries object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Countries object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCountriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCountriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCountriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Orders"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.Orders"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.GetByBillingId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_CustomerBilling key.
            	FK_Orders_CustomerBilling Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_billingId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.GetByCustomerId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_Customers key.
            	FK_Orders_Customers Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.GetByOrderStatusId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Orders_OrderStatus key.
            	FK_Orders_OrderStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_orderStatusId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Orders index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.Orders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.Orders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Orders)">
            <summary>
            	Inserts a HearbalKartDB.Entities.Orders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Orders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.Orders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.Orders object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.OrderDetails"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.OrderDetails"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.GetByCustomerId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_OrderDetails_Customers key.
            	FK_OrderDetails_Customers Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.GetByItemId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_OrderDetails_Items key.
            	FK_OrderDetails_Items Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_itemId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.GetByOrderId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_OrderDetails_Orders key.
            	FK_OrderDetails_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.OrderDetails objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_OrderDetails index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.OrderDetails"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.OrderDetails})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.OrderDetails object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.OrderDetails)">
            <summary>
            	Inserts a HearbalKartDB.Entities.OrderDetails object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.OrderDetails object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.OrderDetails object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.OrderDetails)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.OrderDetails object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.OrderDetails object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlOrderDetailsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.DistributorsOrders"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.DistributorsOrders"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DistributorsOrders objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DistributorsOrders objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DistributorsOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DistributorsOrders objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.GetByDistributorId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_DistributorsOrders_Distributars key.
            	FK_DistributorsOrders_Distributars Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_distributorId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DistributorsOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.GetByOrderId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_DistributorsOrders_Orders key.
            	FK_DistributorsOrders_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.DistributorsOrders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DistributorsOrders index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.DistributorsOrders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.DistributorsOrders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.DistributorsOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.DistributorsOrders)">
            <summary>
            	Inserts a HearbalKartDB.Entities.DistributorsOrders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.DistributorsOrders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.DistributorsOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.DistributorsOrders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.DistributorsOrders object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.DistributorsOrders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlDistributorsOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ItemPurchase"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ItemPurchase"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemPurchase objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemPurchase objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemPurchase objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemPurchase objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.GetByItemId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ItemPurchase_Items key.
            	FK_ItemPurchase_Items Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_itemId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ItemPurchase objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ItemPurchase index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ItemPurchase"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ItemPurchase})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ItemPurchase object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ItemPurchase)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ItemPurchase object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ItemPurchase object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ItemPurchase object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ItemPurchase)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ItemPurchase object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ItemPurchase object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlItemPurchaseProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdOfferProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdOffer"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.ProdOffer"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdOffer objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdOffer objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdOffer objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.ProdOffer objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProdOffer index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.ProdOffer"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.ProdOffer})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdOffer object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdOffer)">
            <summary>
            	Inserts a HearbalKartDB.Entities.ProdOffer object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdOffer object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.ProdOffer object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.ProdOffer)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.ProdOffer object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.ProdOffer object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlProdOfferProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlProdOfferProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlProdOfferProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.CustomerBilling"/> entity.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:HearbalKartDB.Entities.CustomerBilling"/> entity.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.Delete(HearbalKartDB.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.Find(HearbalKartDB.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.Find(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:HearbalKartDB.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetAll(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetPaged(HearbalKartDB.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetByCityId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerBilling_Cities key.
            	FK_CustomerBilling_Cities Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_cityId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetByCountryId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerBilling_Countries key.
            	FK_CustomerBilling_Countries Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_countryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetByCustomerId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerBilling_Customers key.
            	FK_CustomerBilling_Customers Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetByOrderId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerBilling_Orders key.
            	FK_CustomerBilling_Orders Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetByStateId(HearbalKartDB.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerBilling_States key.
            	FK_CustomerBilling_States Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_stateId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of HearbalKartDB.Entities.CustomerBilling objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.GetById(HearbalKartDB.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerBilling index.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:HearbalKartDB.Entities.CustomerBilling"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.BulkInsert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.TList{HearbalKartDB.Entities.CustomerBilling})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.CustomerBilling object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.Insert(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.CustomerBilling)">
            <summary>
            	Inserts a HearbalKartDB.Entities.CustomerBilling object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.CustomerBilling object to insert.</param>
            <remarks>
            	After inserting into the datasource, the HearbalKartDB.Entities.CustomerBilling object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.Update(HearbalKartDB.Data.TransactionManager,HearbalKartDB.Entities.CustomerBilling)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:HearbalKartDB.Data.TransactionManager"/> object</param>
            <param name="entity">HearbalKartDB.Entities.CustomerBilling object to update.</param>
            <remarks>
            	After updating the datasource, the HearbalKartDB.Entities.CustomerBilling object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.SqlCustomerBillingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider">
            <summary>
            This class is the Sql implementation of the NetTiersProvider.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider"/> class.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(HearbalKartDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(HearbalKartDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(HearbalKartDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(HearbalKartDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(HearbalKartDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(HearbalKartDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(HearbalKartDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(HearbalKartDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(HearbalKartDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(HearbalKartDB.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(HearbalKartDB.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(HearbalKartDB.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.UseStoredProcedure">
            <summary>
            Gets a value indicating whether to use stored procedure or not.
            </summary>
            <value>
            	<c>true</c> if this repository use stored procedures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:HearbalKartDB.Data.Bases.NetTiersProvider"/> implementation supports Transacton.
            </summary>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.UserTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.UserType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlUserTypeProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlUserTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdCompanyProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdCompany"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdCompanyProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdCompanyProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ItemSellProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ItemSell"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlItemSellProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlItemSellProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdTableProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdTable"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdTableProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdTableProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.GenderProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Gender"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlGenderProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlGenderProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ItemsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Items"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlItemsProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlItemsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.DeliveredDaysProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.DeliveredDays"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlDeliveredDaysProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlDeliveredDaysProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.CitiesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Cities"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCitiesProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCitiesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.DistributarsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Distributars"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlDistributarsProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlDistributarsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.CustomersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Customers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCustomersProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCustomersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdTypeProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdCategoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdCategoryProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdCategoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdMedicineForProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdMedicineFor"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdMedicineForProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdMedicineForProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.StatesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.States"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlStatesProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlStatesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdSupplymentTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdSupplymentType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdSupplymentTypeProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdSupplymentTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.OrderStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.OrderStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlOrderStatusProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlOrderStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.CountriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Countries"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCountriesProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCountriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.OrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.Orders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlOrdersProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.OrderDetailsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.OrderDetails"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlOrderDetailsProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlOrderDetailsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.DistributorsOrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.DistributorsOrders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlDistributorsOrdersProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlDistributorsOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ItemPurchaseProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ItemPurchase"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlItemPurchaseProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlItemPurchaseProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.ProdOfferProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.ProdOffer"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdOfferProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlProdOfferProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.CustomerBillingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:HearbalKartDB.Entities.CustomerBilling"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCustomerBillingProvider">
            <summary>
            Gets the current <see cref="P:HearbalKartDB.Data.SqlClient.SqlNetTiersProvider.SqlCustomerBillingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.StoredProcedureProvider">
            <summary>
            Summary description for Procedures.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.StoredProcedureProvider"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.Serialize(System.String)">
            <summary>
            Serializes the specified filename.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.GetProcedureBodyFromEmbeddedResource(System.String)">
            <summary>
            Get the query text from the embedded xml file.
            </summary>
            <param name="name">The name of the query.</param>
            <returns>the text of the query</returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Boolean)">
            <summary>
            Get the command wrapper, either from the stored procedures or from the embedded queries.
            </summary>
            <param name="database">The database instance.</param>
            <param name="commandName">the name of the sp.</param>
            <param name="useStoredProcedure">Indicates if we want stored procedure.</param>
            <returns></returns>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Type,HearbalKartDB.Data.SqlFilterParameterCollection,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the command wrapper for a dynamically generated query and
            optionally includes server-side paging.
            </summary>
            <param name="database"></param>
            <param name="commandName"></param>
            <param name="columnEnum"></param>
            <param name="parameters"></param>
            <param name="orderBy"></param>
            <param name="start"></param>
            <param name="pageLength"></param>
            <returns></returns>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.Current">
            <summary>
            Gets the current <see cref="T:HearbalKartDB.Data.SqlClient.StoredProcedureProvider"/> singleton instance.
            </summary>
            <value><see cref="T:HearbalKartDB.Data.SqlClient.StoredProcedureProvider"/></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.Procedures">
            <summary>
            Gets or sets the procedures.
            </summary>
            <value>An <see cref="T:System.Collections.ArrayList"/> of <see cref="T:HearbalKartDB.Data.SqlClient.Procedure"/> objects.</value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:HearbalKartDB.Data.SqlClient.Procedure"/> instance with the specified name.
            </summary>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.StoredProcedureProvider.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:HearbalKartDB.Data.SqlClient.Procedure"/> instance at the specified index.
            </summary>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.Procedure">
            <summary>
            Represents a sql query.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.Procedure.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.Procedure"/> instance.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.Procedure.Parameter(System.String)">
            <summary>
            Get the parameter from the specified name of the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Procedure.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Procedure.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Procedure.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Procedure.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Procedure.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value></value>
        </member>
        <member name="T:HearbalKartDB.Data.SqlClient.Parameter">
            <summary>
            Respresents a query parameter.
            </summary>
        </member>
        <member name="M:HearbalKartDB.Data.SqlClient.Parameter.#ctor">
            <summary>
            Creates a new <see cref="T:HearbalKartDB.Data.SqlClient.Parameter"/> instance.
            </summary>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Parameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Parameter.SqlType">
            <summary>
            Gets or sets the SqlType.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Parameter.Direction">
            <summary>
            Gets or sets the Direction.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Parameter.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Parameter.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value></value>
        </member>
        <member name="P:HearbalKartDB.Data.SqlClient.Parameter.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value></value>
        </member>
    </members>
</doc>
